stages:
  - build
  - deploy
build:
  image: node:14
  stage: build
  allow_failure: false
  tags:
    - shared
  script:
    - echo "run install"
    - npm install --progress=false
    - echo "building UI"
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - dist
deploy-production-environemt:
  stage: deploy
  image: ubuntu:20.04
  only:
    - production
  tags:
    - shared
  # when: on_success
  script:
    - apt-get update -qq && apt-get install -y -qq sshpass
    - ls dist
    - script -qc 'sshpass -p "${prod_user_password}" ssh "${prod_user_username}"@"${prod_user_url}" rm -rf /var/www/html/eac_rde_frontend' /dev/null
    - script -qc 'sshpass -p "${prod_user_password}" scp dist/* "${prod_user_username}"@"${prod_user_url}":/var/www/html/eac_rde_frontend' /dev/null
    - script -qc 'sshpass -p "${prod_user_password}" ssh "${prod_user_username}"@"${prod_user_url}" service nginx restart' /dev/null
    # - sshpass -p "EAC@1234" ssh "administrator"@"196.41.38.246"  . /root/fast_duka_dash/deploy.sh
    # - "echo Deploying the current release..."
    # - sshpass -p "${STAGING_SERVER_PASSWORD}" scp -P "${SERVER_SSH_PORT}" -r BloodBank.WebUI/* "${STAGING_SERVER_USERNAME}"@"${STAGING_SERVER}":/var/www/bloodbank.health.go.ke/
    # - sshpass -p "${STAGING_SERVER_PASSWORD}" ssh "${STAGING_SERVER_USERNAME}"@"${STAGING_SERVER}" -p "${SERVER_SSH_PORT}" ". ~/scripts/reload-service.sh bloodbank-webui.service"
